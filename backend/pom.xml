<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>me.grudzien.patryk</groupId>
        <artifactId>vehicle-health-service</artifactId>
        <version>1.0</version>
    </parent>

    <artifactId>backend</artifactId>
    <packaging>jar</packaging>

    <developers>
        <developer>
            <name>Patryk Grudzie≈Ñ</name>
            <email>patryk.grudzien.91@gmail.com</email>
        </developer>
    </developers>

    <profiles>
        <!--
        ############################################
        ########  BUILD BACKEND MODULE DEV #########
        ############################################
        -->
        <profile>
            <id>build-backend-module-dev</id>
            <build>
                <plugins>
                    <!-- Maven Spring Boot plugin -->
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${spring.boot.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <!-- This goal will generate executable JAR file -->
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Maven Failsafe Plugin (Spring Boot configures surefire by default, but NOT failsafe -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>Running Integration Tests</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Maven Surefire Plugin (OVERRIDING default version) -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                    </plugin>
                    <!-- Maven Clean Plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>${maven-clean-plugin.version}</version>
                        <!-- EXECUTIONS -->
                        <executions>
                            <!-- Remove static folder -->
                            <execution>
                                <id>Remove static folder</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <filesets>
                                        <fieldset>
                                            <directory>${resources.public.directory}</directory>
                                        </fieldset>
                                    </filesets>
                                </configuration>
                            </execution>
                            <!-- Remove heroku-deployment-enabled file -->
                            <execution>
                                <id>Remove heroku-deployment-backend-enabled file</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <filesets>
                                        <fileset>
                                            <directory>${basedir}</directory>
                                            <includes>
                                                <include>heroku-deployment-backend-enabled</include>
                                            </includes>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Maven Resources plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>${maven-resources-plugin.version}</version>
                        <!-- EXECUTIONS -->
                        <executions>
                            <!-- Copy Vue.js frontend content -->
                            <execution>
                                <id>Copy Vue.js content to backend/public</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <!-- Configuration -->
                                <configuration>
                                    <outputDirectory>${resources.public.directory}</outputDirectory>
                                    <overwrite>true</overwrite>
                                    <resources>
                                        <resource>
                                            <directory>${project.parent.basedir}/${frontend.target.dist.directory}</directory>
                                            <includes>
                                                <include>static/</include>
                                                <include>index.html</include>
                                                <include>favicon.ico</include>
                                            </includes>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Maven Exec Plugin -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>${exec-maven-plugin.version}</version>
                        <executions>
                            <execution>
                                <phase>compile</phase>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <mainClass>me.grudzien.patryk.CreateFileOnActiveHerokuProfile</mainClass>
                        </configuration>
                    </plugin>
                    <!-- Maven Dependency Plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                    </plugin>
                    <!-- Maven Enforcer Plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>${maven-enforcer-plugin.version}</version>
                        <configuration>
                            <rules>
                                <dependencyConvergence/>
                            </rules>
                        </configuration>
                    </plugin>
                    <!-- Maven Compiler Plugin (MapStruct purpose) -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven-compiler-plugin.version}</version>
                        <configuration>
                            <source>1.8</source>
                            <target>1.8</target>
                            <!--
                            The (mapstruct-processor) is used to generate the mapper implementation during the build.

                            <annotationProcessorPaths> specifies dependency(ies) that are passed to maven-compiler-plugin.
                            The <annotationProcessorPaths> tells mapstruct processor how it needs to be invoked.

                            In any case in order to make it work correctly you have 2 options:

                            1) Add the lombok dependency to the annotationProcessorPaths as well. Then it will be picked up by the compiler and it should work.
                            2) Ad the mapstruct-processor jar to your pom as a provided dependency.
                            You will have to remove the annotationProcessorPaths in that case and the compiler will pick up the processors from your dependency.
                            The reason why we are suggesting to use the annotationProcessorPaths is because by doing that you won't be able to use something
                            from the mapstruct-processor module by accident.
                            -->
                            <annotationProcessorPaths>
                                <path>
                                    <groupId>org.projectlombok</groupId>
                                    <artifactId>lombok</artifactId>
                                    <version>${lombok.version}</version>
                                </path>
                                <path>
                                    <groupId>org.mapstruct</groupId>
                                    <artifactId>mapstruct-processor</artifactId>
                                    <version>${map-struct-core.version}</version>
                                </path>
                            </annotationProcessorPaths>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <activation>
                <file>
                    <missing>heroku-deployment-backend-enabled</missing>
                </file>
            </activation>
        </profile>

        <!--
        ##########################################################
        ########  BUILD BACKEND MODULE HEROKU DEPLOYMENT #########
        ##########################################################
        -->
        <profile>
            <id>build-backend-module-heroku-deployment</id>
            <build>
                <plugins>
                    <!-- Maven Spring Boot plugin -->
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <version>${spring.boot.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <!-- This goal will generate executable JAR file -->
                                    <goal>repackage</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Maven Failsafe Plugin (Spring Boot configures surefire by default, but NOT failsafe -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${maven-failsafe-plugin.version}</version>
                    </plugin>
                    <!-- Maven Surefire Plugin (OVERRIDING default version) -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>${maven-surefire-plugin.version}</version>
                    </plugin>
                    <!-- Maven Clean Plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>${maven-clean-plugin.version}</version>
                        <!-- EXECUTIONS -->
                        <executions>
                            <!-- Remove heroku-deployment-enabled file -->
                            <execution>
                                <id>HEROKU >>>> Remove heroku-deployment-backend-enabled file >>>> HEROKU</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <filesets>
                                        <fileset>
                                            <directory>${basedir}</directory>
                                            <includes>
                                                <include>heroku-deployment-backend-enabled</include>
                                            </includes>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                            <!-- Remove static folder -->
                            <execution>
                                <id>HEROKU >>>> Remove src/main/resources/static folder >>>> HEROKU</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <filesets>
                                        <fieldset>
                                            <directory>${resources.public.directory}</directory>
                                        </fieldset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- Maven Heroku plugin -->
                    <plugin>
                        <groupId>com.heroku.sdk</groupId>
                        <artifactId>heroku-maven-plugin</artifactId>
                        <version>${heroku-maven-plugin.version}</version>
                        <executions>
                            <!-- Deploy .jar file to Heroku -->
                            <execution>
                                <id>HEROKU >>>> Deploy .jar file to Heroku >>>> HEROKU</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>deploy</goal>
                                </goals>
                                <!-- Configuration -->
                                <configuration>
                                    <appName>${heroku.app.name}</appName>
                                    <jdkVersion>1.8</jdkVersion>
                                    <processTypes>
                                        <web>java $JAVA_OPTS -cp target/classes:target/dependency/* ${main.app.class.name}</web>
                                    </processTypes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <activation>
                <file>
                    <exists>heroku-deployment-backend-enabled</exists>
                </file>
            </activation>
        </profile>
    </profiles>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- SECURITY -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!-- WEB -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- JPA -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- THYMELEAF -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- ACTUATOR -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- DEVTOOLS -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <!-- MAIL -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <!-- LOMBOK -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
        <!-- POSTGRES -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgre.sql.version}</version>
        </dependency>
        <!-- APACHE COMMONS BEAN UTILS -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>${apache.commons.bean-utils.version}</version>
        </dependency>
        <!-- APACHE COMMONS LANG -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <!-- GUAVA -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <!-- ANNOTATION PROCESSOR -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- JSON Web Token Support For The JVM -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <!-- Spring Mobile (used in JwtTokenHelper class to create Audience in JWT) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mobile</artifactId>
            <version>${spring-boot-starter-mobile.version}</version>
        </dependency>
        <!-- Ehcache 2 -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
        </dependency>
        <!-- Vavr -->
        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
            <version>${vavr.version}</version>
        </dependency>
        <!-- OAuth2 Client -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-client</artifactId>
        </dependency>
        <!-- OAuth2 JOSE (Javascript Object Signing and Encryption) -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-jose</artifactId>
        </dependency>
        <!-- JSON Web Key Set parser library -->
        <dependency>
            <groupId>com.auth0</groupId>
            <artifactId>jwks-rsa</artifactId>
            <version>${json.web.key.set.parser.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Spring Security JWT Library -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-jwt</artifactId>
            <version>${spring.security.jwt.version}</version>
        </dependency>
        <!-- H2 Database (for local testing) -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        <!-- MapStruct Core -->
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${map-struct-core.version}</version>
        </dependency>
        <!-- Jasypt (Java Simplified Encryption) -->
        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
            <version>2.1.1</version>
        </dependency>

        <!-- TEST DEPENDENCIES -->

        <!-- Spring Boot Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <!-- Exclude JUnit 4 from starter-test (and all other related test-starter. i.e those for security and project reactor -->
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Security Test -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
            <!-- Exclude JUnit 4 -->
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- REST Assured -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
            <!-- Exclude JUnit 4 -->
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Spring Mock MVC (REST Assured - RestAssuredMockMvc) -->
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>spring-mock-mvc</artifactId>
            <scope>test</scope>
            <!-- Exclude JUnit 4 -->
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- Hamcrest All -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest.all.version}</version>
            <scope>test</scope>
            <!-- Exclude JUnit 4 -->
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- JUnit 5 Jupiter API -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- JUnit 5 Jupiter Engine -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- JUnit 5 Jupiter Params -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Mockito JUnit Jupiter -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
        </dependency>
    </dependencies>

</project>