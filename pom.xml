<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>me.grudzien.patryk</groupId>
    <artifactId>full-stack-web-app</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>

    <name>full-stack-web-app</name>
    <description>Summary application using Spring Boot and Vue.js</description>

    <modules>
        <module>frontend</module>
        <module>backend</module>
    </modules>

    <properties>
        <!--########################### PLUGINS' VERSIONS ###########################-->
        <!-- Maven Frontend Plugin -->
        <frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
        <!-- Maven Resource Plugin -->
        <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
        <!-- Maven Clean Plugin -->
        <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
        <!-- Heroku Plugin -->
        <!--
            Using the Heroku Maven plugin has a number of advantages:
            1) It maintains all configuration in a single place, eliminating the need of a "Procfile"
            2) It requires no installation of heroku CLI and heroku deploy CLI plugin
            3) It works out of the box on any CI server without any additional setup

            - If the application is packaged as jar:
              mvn heroku:deploy

            - If the application is packaged as war:
              mvn heroku:deploy-war
        -->
        <heroku-maven-plugin.version>2.0.3</heroku-maven-plugin.version>
        <!-- Exec Maven Plugin -->
        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>

        <!--########################### DEPENDENCIES' VERSIONS ###########################-->
        <!-- Spring -->
        <spring.boot.version>1.5.8.RELEASE</spring.boot.version>
        <spring.security.version>5.0.1.RELEASE</spring.security.version>
        <!-- Node -->
        <node.js.version>v8.9.4</node.js.version>
        <node.download.root>https://nodejs.org/dist/</node.download.root>
        <!-- Npm -->
        <npm.version>5.6.0</npm.version>
        <npm.download.root>http://registry.npmjs.org/npm/-/</npm.download.root>
        <!-- H2 -->
        <h2database.version>1.4.196</h2database.version>
        <!-- PostgreSql -->
        <postgre.sql.version>42.2.1</postgre.sql.version>
        <!-- Google Guava -->
        <guava.version>24.0-jre</guava.version>

        <!--########################### PROJECT's DETAILS ###########################-->
        <!-- Structure -->
        <resources.public.directory>src/main/resources/public</resources.public.directory>
        <frontend.target.dist.directory>frontend/target/dist</frontend.target.dist.directory>
        <!-- JDK -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- Encoding -->
        <project.build.source.encoding>UTF-8</project.build.source.encoding>
        <project.reporting.output.encoding>UTF-8</project.reporting.output.encoding>
        <!-- Heroku deployment trigger -->
        <heroku-deployment-frontend-enabled.file>heroku-deployment-frontend-enabled</heroku-deployment-frontend-enabled.file>
        <heroku-deployment-backend-enabled.file>heroku-deployment-backend-enabled</heroku-deployment-backend-enabled.file>
    </properties>

</project>