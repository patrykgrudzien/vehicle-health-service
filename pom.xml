<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>me.grudzien.patryk</groupId>
    <artifactId>vehicle-health-service</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>

    <name>vehicle-health-service</name>
    <description>
        Keep your car in perfect shape, have control over parts condition, maintenance costs, insurance validation and much more.
        All that features in one place!
        Stay tuned for final version - development in progress!
    </description>

    <modules>
        <module>frontend</module>
        <module>backend</module>
    </modules>

    <properties>
        <!--########################### PLUGINS' VERSIONS ###########################-->
        <!-- Maven Frontend Plugin -->
        <frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
        <!-- Maven Resource Plugin -->
        <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>
        <!-- Maven Clean Plugin -->
        <maven-clean-plugin.version>3.0.0</maven-clean-plugin.version>
        <!-- Heroku Plugin -->
        <!--
            Using the Heroku Maven plugin has a number of advantages:
            1) It maintains all configuration in a single place, eliminating the need of a "Procfile"
            2) It requires no installation of heroku CLI and heroku deploy CLI plugin
            3) It works out of the box on any CI server without any additional setup

            - If the application is packaged as jar:
              mvn heroku:deploy

            - If the application is packaged as war:
              mvn heroku:deploy-war
        -->
        <heroku-maven-plugin.version>2.0.3</heroku-maven-plugin.version>
        <!-- Exec Maven Plugin -->
        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>

        <!-- Required versions of plugin during migration to JUnit5: -->
        <!-- Use the most recent "failsafe" and "surefire" plugin versions -->

        <!-- The (Failsafe Plugin) is designed to run integration tests while the
             (Surefire Plugin) is designed to run unit tests. The name (failsafe) was chosen both
             because it is a synonym of surefire and because it implies that when it fails, it does so in a safe way.
        -->
        <maven-failsafe-plugin.version>2.22.1</maven-failsafe-plugin.version>
        <maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
        <maven-enforcer-plugin.version>3.0.0-M2</maven-enforcer-plugin.version>
        <maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>

        <!--########################### DEPENDENCIES' VERSIONS ###########################-->
        <!-- Spring -->
        <spring.boot.version>2.1.1.RELEASE</spring.boot.version>
        <!-- Node.js -->
        <node.js.version>v10.13.0</node.js.version>
        <!-- H2 -->
        <h2database.version>1.4.196</h2database.version>
        <!-- PostgreSql -->
        <postgre.sql.version>42.2.1</postgre.sql.version>
        <!-- Google Guava -->
        <guava.version>25.1-jre</guava.version>
        <!-- Lombok -->
        <lombok.version>1.18.4</lombok.version>
        <!-- Apache Commons BeanUtils -->
        <apache.commons.bean-utils.version>1.9.3</apache.commons.bean-utils.version>
        <!-- JSON Web Token Support For The JVM -->
        <jjwt.version>0.9.0</jjwt.version>
        <!-- Spring Boot Starter Mobile -->
        <spring-boot-starter-mobile.version>1.5.10.RELEASE</spring-boot-starter-mobile.version>
        <!-- Vavr -->
        <vavr.version>0.9.2</vavr.version>
		<!-- JSON Web Key Set parser library -->
		<json.web.key.set.parser.version>0.6.0</json.web.key.set.parser.version>
		<!-- Spring Security JWT Library -->
		<spring.security.jwt.version>1.0.9.RELEASE</spring.security.jwt.version>
        <!-- Hamcrest All -->
        <hamcrest.all.version>1.3</hamcrest.all.version>
        <!-- MapStruct Core -->
        <map-struct-core.version>1.3.0.Beta2</map-struct-core.version>
		
        <!--########################### PROJECT's DETAILS ###########################-->
        <!-- Structure -->
        <resources.public.directory>src/main/resources/public</resources.public.directory>
        <frontend.target.dist.directory>frontend/target/dist</frontend.target.dist.directory>
        <!-- JDK -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.output.encoding>UTF-8</project.reporting.output.encoding>

        <!--########################### HEROKU DETAILS ###########################-->
        <!-- Property needed for Heroku plugin -->
        <heroku.app.name>vehicle-health-service</heroku.app.name>
        <main.app.class.name>me.grudzien.patryk.SpringBootVueJsApplication</main.app.class.name>
    </properties>

</project>